var fs = require('fs');var searchBook = require("./searchBook");var searchBookFn = searchBook.searchBook;/*** this block moved to static in server.jsfunction books(response,query) {	var index;    console.log("Request handler 'books' was called.");	response.writeHead(200, {"Content-Type": "text/html"});  	fs.readFile('./views/bookhome.htm', function (err, data) 	{		if (err) {			throw err; 		}		index = data;		response.write(index);		response.end();			});		}function style(response,query) {	var style;    console.log("Request handler 'style' was called.");	response.writeHead(200, {"Content-Type": "text/css"});  	fs.readFile('./public/css/bootstrap.css', function (err, data) 	{		if (err) {			throw err; 		}		style = data;		response.write(style);		response.end();			});		}function jsrender(response,query) {	var jsrender;    console.log("Request handler 'jsrender' was called.");	response.writeHead(200, {"Content-Type": "text/javascript"});  	fs.readFile('./public/js/jsrender.js', function (err, data) 	{		if (err) {			throw err; 		}		jsrender = data;		response.write(jsrender);		response.end();			});		}*/function home(response,query) {  console.log("Request handler 'home' was called.");  response.writeHead(302, {"Content-Type" : "text/plain",							"location" : "/books"});  console.log("Request redirected");  response.write("Request handler 'home' was called.");  response.end();}function contact(response,query) {  //console.log("Request handler 'contact' was called.");  response.writeHead(200, {"Content-Type": "text/plain"});  response.write("Request handler 'contact' was called.");  response.end();}function bookPage(response,query) {  //console.log("Request handler 'contact' was called.");  response.writeHead(200, {"Content-Type": "text/plain"});  response.write("Request handler 'bookPage' was called.");  response.end();}function book(response,query) {	var term = query.show;	var scraper = require('./regexscraper'); 	console.log("Request handler 'book' was called with show "+term);	if(term !=null && term !='' && !isNaN (term) )	{		console.log("Request handler 'book' was called with show "+term);		scraper.scrape(term,response);	}	}function search(response,query) {	var term = query.term;	var scraper = require('./regexscraper'); 	console.log("Request handler 'search' was called with term"+term);		if(term !=null && term !='' && !isNaN (term) )	{				console.log("term "+term+" is an ISBN");		scraper.scrape(term,response);	}	else	{		searchBookFn(term, 			function(data)			{				console.log("data : "+data);								var jsonResponse = JSON.parse(JSON.stringify(data));				//var results = jsonResponse.search.results.work[0].best_book.title;				var iter = 0;				var bookResults = [];				while((jsonResponse.Items.Item[iter])&&iter<5)				{					bookResult = jsonResponse.Items.Item[iter].ItemAttributes;					console.log(bookResult);					bookResults.push({						title:bookResult.Title,						author:bookResult.Author,						image:"",						ISBN:bookResult.EAN,						amazonlink:jsonResponse.Items.Item[iter].DetailPageURL					});										iter++;				}				console.log(bookResults);				//console.dir(result);				response.writeHead(200, {"Content-Type": "application/json"});								response.write(JSON.stringify(bookResults));				response.end();															});			}	}function price(response,query) {	var isbn = query.isbn;	var store = query.store;	var scraper = require('./regexscraper'); 	console.log("Request handler 'price' was called with isbn: "+isbn+" and store: "+store);		if(isbn !=null && isbn !='' && !isNaN (isbn) && store !=null && store!='')	{		console.log("price isbn "+isbn+" is an ISBN"+" and store is "+store);		scraper.scrapePrice(isbn,store,response);	}	else	{		response.writeHead(200, {"Content-Type": "application/json"});		response.write("Request handler 'price' was called.");		response.end();	}	}//exports.books = books;//exports.style = style;//exports.jsrender = jsrender;exports.home = home;exports.contact = contact;exports.search = search;exports.price = price;exports.book = book;exports.bookPage = bookPage;